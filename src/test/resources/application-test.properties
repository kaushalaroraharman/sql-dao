#
# /*
#
#   ******************************************************************************
#
#    Copyright (c) 2023-24 Harman International
#
#
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#
#    you may not use this file except in compliance with the License.
#
#    You may obtain a copy of the License at
#
#
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#
#    Unless required by applicable law or agreed to in writing, software
#
#    distributed under the License is distributed on an "AS IS" BASIS,
#
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#    See the License for the specific language governing permissions and
#
#    limitations under the License.
#
#
#
#    SPDX-License-Identifier: Apache-2.0
#
#    *******************************************************************************
#
#  */
#

spring.datasource.type=com.zaxxer.hikari.HikariDataSource

#spring.jpa.properties.hibernate.default_schema=testSchema
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

# This will create table automatically in your database
spring.jpa.hibernate.ddl-auto=create

server.port=8090

postgres.jdbc.url=${DB_URL}
postgres.username=root
postgres.password=root
postgres.driver.class.name=org.postgresql.Driver
postgres.pool.name=hikariConnectionPool
postgres.data-source-properties.cachePrepStmts=true
postgres.data-source-properties.prepStmtCacheSize=250
postgres.data-source-properties.prepStmtCacheSqlLimit=2048

postgres.max.idle.time=0
postgres.connection.timeout.ms=60000
postgres.expected99thPercentileMs=60000

logging.level.root=INFO

management.endpoints.web.exposure.include=metrics

metrics.prometheus.enabled=true
postgresdb.metrics.enabled=true
prometheus.agent.port=9100
prometheus.agent.port.exposed=9100
postgresdb.metrics.thread.initial.delay.ms=1000
postgresdb.metrics.thread.freq.ms=5000

service.name=testService

sp.restart.on.failure=false

credential.provider.bean.name=defaultPostgresDBCredentialsProvider

health.service.executor.initial.delay=10000
health.service.retry.interval.millis=10000
